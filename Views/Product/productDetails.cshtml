@using PayPal.Api
@model Product
<style>
    /* تحسين النجوم */
    .fa-star {
        font-size: 1.5rem;
        cursor: pointer;
        transition: color 0.2s, transform 0.2s;
    }

        .fa-star:hover {
            transform: scale(1.2);
        }

        .fa-star.active {
            color: #ffc107;
            text-shadow: 0 0 8px rgba(255, 193, 7, 0.7);
        }

    /* تحسين تصميم قسم التقييم */
    #imagePreviewContainer {
        display: none;
        margin-top: 10px;
        justify-content: center;
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    #imagePreview {
        max-width: 100%;
        height: auto;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }

    /* تحسين أزرار الألوان */
    .color-btn {
        width: 40px;
        height: 40px;
        border: 2px solid #fff;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .color-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

    /* تحسين تصميم البطاقات */
    .card {
        border: none;
        border-radius: 15px;
        overflow: hidden;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        }

        .card h5 {
            color: #333;
            font-weight: 600;
        }

        .card small {
            color: #6c757d;
        }

        .card p {
            color: #555;
            line-height: 1.6;
        }

    /* تحسين التصميم العام */
    .container {
        background-color: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);
    }

    h2.fw-bold {
        color: #2c3e50;
        font-size: 2.5rem;
        margin-bottom: 20px;
    }

    h4.text-success {
        color: #28a745 !important;
        font-size: 1.8rem;
        margin-bottom: 15px;
    }

    .badge.bg-secondary {
        background-color: #6c757d !important;
        font-size: 0.9rem;
        padding: 8px 12px;
        border-radius: 20px;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        padding: 10px;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 5%;
    }

    .carousel-item img {
        border-radius: 15px;
        transition: transform 0.3s;
    }

    .carousel-item:hover img {
        transform: scale(1.05);
    }

    /* تحسين التصميم للأحجام */
    .mt-3 h5 {
        color: #495057;
        font-size: 1.2rem;
        margin-bottom: 10px;
    }

    .mt-3 .badge {
        margin-right: 8px;
        font-weight: 500;
    }

    /* تحسين التصميم للصور المرفقة */
    .img-fluid.rounded {
        border: 2px solid #e9ecef;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .img-fluid.rounded:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

    .rating-stars {
        text-align: center;
        margin-bottom: 15px;
    }

        .rating-stars i {
            font-size: 30px;
            color: #ccc;
            cursor: pointer;
            transition: color 0.3s;
            padding: 5px;
        }

            .rating-stars i.active,
            .rating-stars i:hover {
                color: #ff9800;
            }

    /* .btn {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            font-weight: bold;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-primary {
            background-color: #007bff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }
     */
    .file-upload {
        margin-top: 15px;
    }

        .file-upload label {
            font-size: 16px;
            color: #495057;
            cursor: pointer;
        }

    .custom-file-label {
        background-color: #e9ecef;
        padding: 8px 15px;
        border: 1px solid #ced4da;
        border-radius: 5px;
        cursor: pointer;
        text-align: center;
        margin-top: 5px;
    }

    .image-preview {
        display: none;
        justify-content: center;
        align-items: center;
        margin-top: 15px;
    }

        .image-preview img {
            max-width: 100%;
            max-height: 200px;
            border-radius: 5px;
        }

    .text-danger {
        color: red;
        font-size: 14px;
    }
</style>
@{
    ViewData["Title"] = "Product Details";
    var colors = Model.Variants.Select(v => v.Color).Distinct().ToList();
    var sizes = Model.Variants.Select(v => v.Size).Distinct().ToList();
}

<div class="container my-4">
    <div class="row">
        <!-- عرض الصور مع خيارات الألوان -->
        <div class="col-md-6">
            <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @for (int i = 0; i < colors.Count; i++)
                    {
                        var variant = Model.Variants.FirstOrDefault(v => v.ColorId == colors[i].Id);
                        if (variant?.dbImage != null)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")" data-color-id="@colors[i].Id">
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(variant.dbImage)" class="d-block w-100 rounded" alt="Product Image" />
                            </div>
                        }
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon"></span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon"></span>
                </button>
            </div>


            <div class="mt-3 d-flex gap-2">
                @foreach (var color in colors)
                {
                    <button class="btn p-3 border rounded-circle color-btn" style="background-color: @color.ColorName;" data-color-id="@color.Id"></button>
                }
            </div>
        </div>

        <!-- تفاصيل المنتج -->
        <div class="col-md-6">
            <h2 class="fw-bold">@Model.Name</h2>
            <p class="text-muted">@Model.Description</p>
            <h4 class="text-success">Price: $@Model.Price</h4>

            <!-- الأحجام المتوفرة -->
            <div class="mt-3">
                <h5>Available Sizes:</h5>
                @foreach (var size in sizes)
                {
                    <span class="badge bg-secondary me-2 p-2">@size.SizeName</span>
                }
            </div>
        </div>
    </div>
    <div class="review-container mt-4">
        <h3>Add Your Review</h3>
        <form id="reviewForm" asp-action="_CreateReviewPartial" asp-controller="Product" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" name="ProductId" value="@Model.ID" />

            <!-- 📝 حقل التعليق -->
            <div>
                <textarea class="form-control" name="Content" placeholder="Write your comment here..." rows="5"></textarea>
            </div>

            <!-- ⭐ تقييم النجوم -->
            <div class="rating-stars mt-2">
                <label>Rating:</label>
                <div id="stars">
                    @for (var i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star" data-value="@i"></i>
                    }
                </div>
                <input type="hidden" name="Rating" />
            </div>

            <!-- 📸 رفع صورة -->
            <div class="file-upload mt-2">
                <label for="uploadImage">Upload a photo (optional):</label>
                <input id="uploadImage" type="file" name="clientFile" accept="image/*" hidden />
                <label class="custom-file-label" for="uploadImage">Choose a file...</label>
            </div>

            <!-- ✅ معاينة الصورة قبل الرفع -->
            <div class="image-preview" id="imagePreviewContainer">
                <img id="imagePreview" src="#" alt="Preview" />
            </div>

            <button type="submit" class="btn btn-primary mt-2">Submit</button>
        </form>
    </div>
    <!-- قسم التقييمات -->
    <div class="mt-5">
        <h3 class="border-bottom pb-2">Reviews:</h3>

        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            @foreach (var review in Model.Reviews.OrderByDescending(r => r.Date))
            {
                <div class="card mb-3 shadow-sm p-3 rounded">
                    <div class="d-flex align-items-center">

                        <div>
                            <h5 class="mb-1">@review.User.Username</h5>
                            <small class="text-muted">@review.Date.ToString("dd MMM yyyy")</small>
                        </div>
                    </div>
                   
                    <div class="mt-3">
                       
                        <!-- التقييم -->
                        <div class="mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <span class="fa fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></span>
                            }
                        </div>

                        <!-- محتوى التقييم -->
                        <p>@review.Content</p>

                        <!-- صورة مرفقة مع التقييم -->
                        @if (!string.IsNullOrEmpty(review.ImageUrl))
                        {
                            <img src="@review.ImageUrl" class="img-fluid rounded mt-2" style="max-width: 300px;" alt="Review Image" />
                        }
                    </div>
                </div>
            }
        }
        else
        {

            <p class="text-muted">No reviews yet.</p>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.color-btn').forEach(button => {
            button.addEventListener('click', function () {
                let colorId = this.getAttribute('data-color-id');
                let carouselItems = document.querySelectorAll('.carousel-item');

                carouselItems.forEach(item => {
                    if (item.getAttribute('data-color-id') === colorId) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });
            });
        });
        document.addEventListener("DOMContentLoaded", function () {
            const stars = document.querySelectorAll("#stars i");
            const ratingInput = document.querySelector("input[name='Rating']");
            const imageInput = document.getElementById("uploadImage");
            const imagePreview = document.getElementById("imagePreview");
            const imagePreviewContainer = document.getElementById("imagePreviewContainer");
            const fileLabel = document.querySelector(".custom-file-label");

            // التعامل مع تقييم النجوم
            stars.forEach(star => {
                star.addEventListener("click", function () {
                    let selectedRating = this.getAttribute("data-value");
                    ratingInput.value = selectedRating;

                    stars.forEach(s => s.classList.remove("active"));
                    for (let i = 0; i < selectedRating; i++) {
                        stars[i].classList.add("active");
                    }
                });
            });

            // معاينة الصورة قبل الرفع
            imageInput.addEventListener("change", function () {
                const file = this.files[0];
                if (file) {
                    fileLabel.textContent = file.name;
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        imagePreview.src = e.target.result;
                        imagePreviewContainer.style.display = "flex";
                    };
                    reader.readAsDataURL(file);
                } else {
                    fileLabel.textContent = "Choose a file...";
                    imagePreviewContainer.style.display = "none";
                }
            });
        });
    </script>
}

